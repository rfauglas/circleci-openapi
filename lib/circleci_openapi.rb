=begin
#CircleCI API

#This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

# Common files
require 'circleci_openapi/api_client'
require 'circleci_openapi/api_error'
require 'circleci_openapi/version'
require 'circleci_openapi/configuration'

# Models
require 'circleci_openapi/models/artifact'
require 'circleci_openapi/models/artifact_list_response'
require 'circleci_openapi/models/checkout_key'
require 'circleci_openapi/models/checkout_key_input'
require 'circleci_openapi/models/checkout_key_list_response'
require 'circleci_openapi/models/collaboration'
require 'circleci_openapi/models/context'
require 'circleci_openapi/models/environment_variable_list_response'
require 'circleci_openapi/models/environment_variable_pair'
require 'circleci_openapi/models/environment_variable_pair1'
require 'circleci_openapi/models/inline_object'
require 'circleci_openapi/models/inline_object1'
require 'circleci_openapi/models/inline_object2'
require 'circleci_openapi/models/inline_response200'
require 'circleci_openapi/models/inline_response2001'
require 'circleci_openapi/models/inline_response2001_items'
require 'circleci_openapi/models/inline_response2002'
require 'circleci_openapi/models/inline_response2002_items'
require 'circleci_openapi/models/inline_response2002_metrics'
require 'circleci_openapi/models/inline_response2002_metrics_duration_metrics'
require 'circleci_openapi/models/inline_response2003'
require 'circleci_openapi/models/inline_response2003_items'
require 'circleci_openapi/models/inline_response2004'
require 'circleci_openapi/models/inline_response2004_items'
require 'circleci_openapi/models/inline_response2004_metrics'
require 'circleci_openapi/models/inline_response2004_metrics_duration_metrics'
require 'circleci_openapi/models/inline_response2005'
require 'circleci_openapi/models/inline_response2005_items'
require 'circleci_openapi/models/inline_response_default'
require 'circleci_openapi/models/job'
require 'circleci_openapi/models/job_details'
require 'circleci_openapi/models/job_details_contexts'
require 'circleci_openapi/models/job_details_executor'
require 'circleci_openapi/models/job_details_latest_workflow'
require 'circleci_openapi/models/job_details_messages'
require 'circleci_openapi/models/job_details_organization'
require 'circleci_openapi/models/job_details_parallel_runs'
require 'circleci_openapi/models/job_details_pipeline'
require 'circleci_openapi/models/job_details_project'
require 'circleci_openapi/models/message_response'
require 'circleci_openapi/models/pipeline'
require 'circleci_openapi/models/pipeline_config'
require 'circleci_openapi/models/pipeline_creation'
require 'circleci_openapi/models/pipeline_list_response'
require 'circleci_openapi/models/pipeline_list_response_errors'
require 'circleci_openapi/models/pipeline_list_response_trigger'
require 'circleci_openapi/models/pipeline_list_response_trigger_actor'
require 'circleci_openapi/models/pipeline_list_response_vcs'
require 'circleci_openapi/models/pipeline_list_response_vcs_commit'
require 'circleci_openapi/models/project'
require 'circleci_openapi/models/project_vcs_info'
require 'circleci_openapi/models/rerun_workflow_parameters'
require 'circleci_openapi/models/tests_response'
require 'circleci_openapi/models/tests_response_items'
require 'circleci_openapi/models/trigger_pipeline_parameters'
require 'circleci_openapi/models/user'
require 'circleci_openapi/models/workflow'
require 'circleci_openapi/models/workflow_job_list_response'
require 'circleci_openapi/models/workflow_list_response'

# APIs
require 'circleci_openapi/api/context_api'
require 'circleci_openapi/api/insights_api'
require 'circleci_openapi/api/job_api'
require 'circleci_openapi/api/pipeline_api'
require 'circleci_openapi/api/project_api'
require 'circleci_openapi/api/user_api'
require 'circleci_openapi/api/workflow_api'

module CircleciOpenapi
  class << self
    # Customize default settings for the SDK using block.
    #   CircleciOpenapi.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
