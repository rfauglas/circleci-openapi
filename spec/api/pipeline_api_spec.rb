=begin
#CircleCI API

#This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for CircleciOpenapi::PipelineApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PipelineApi' do
  before do
    # run before each test
    @api_instance = CircleciOpenapi::PipelineApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PipelineApi' do
    it 'should create an instance of PipelineApi' do
      expect(@api_instance).to be_instance_of(CircleciOpenapi::PipelineApi)
    end
  end

  # unit tests for continue_pipeline
  # Continue a pipeline (Preview)
  # Continue a pipeline from the setup phase.
  # @param [Hash] opts the optional parameters
  # @option opts [InlineObject2] :inline_object2 
  # @return [MessageResponse]
  describe 'continue_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_by_id
  # Get a pipeline
  # Returns a pipeline by ID.
  # @param pipeline_id The unique ID of the pipeline.
  # @param [Hash] opts the optional parameters
  # @return [Pipeline]
  describe 'get_pipeline_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_by_number
  # Get a pipeline
  # Returns a pipeline by number.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param pipeline_number The number of the pipeline.
  # @param [Hash] opts the optional parameters
  # @return [Pipeline]
  describe 'get_pipeline_by_number test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_config_by_id
  # Get a pipeline&#39;s configuration
  # Returns a pipeline&#39;s configuration by ID.
  # @param pipeline_id The unique ID of the pipeline.
  # @param [Hash] opts the optional parameters
  # @return [PipelineConfig]
  describe 'get_pipeline_config_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_my_pipelines
  # Get your pipelines
  # Returns a sequence of all pipelines for this project triggered by the user.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page_token A token to retrieve the next page of results.
  # @return [PipelineListResponse]
  describe 'list_my_pipelines test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_pipelines
  # Get a list of pipelines
  # Returns all pipelines for the most recently built projects (max 250) you follow in an organization.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :org_slug Org slug in the form &#x60;vcs-slug/org-name&#x60;
  # @option opts [String] :page_token A token to retrieve the next page of results.
  # @option opts [Boolean] :mine Only include entries created by your user.
  # @return [PipelineListResponse]
  describe 'list_pipelines test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_pipelines_for_project
  # Get all pipelines
  # Returns all pipelines for this project.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :branch The name of a vcs branch.
  # @option opts [String] :page_token A token to retrieve the next page of results.
  # @return [PipelineListResponse]
  describe 'list_pipelines_for_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_workflows_by_pipeline_id
  # Get a pipeline&#39;s workflows
  # Returns a paginated list of workflows by pipeline ID.
  # @param pipeline_id The unique ID of the pipeline.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page_token A token to retrieve the next page of results.
  # @return [WorkflowListResponse]
  describe 'list_workflows_by_pipeline_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trigger_pipeline
  # Trigger a new pipeline
  # Triggers a new pipeline on the project.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_attribution_login The login or user-readable identifier for the pipeline&#39;s triggerer. Internal use only.
  # @option opts [String] :x_attribution_actor_id The id the integration uses to identify the pipeline&#39;s triggerer. Internal use only.
  # @option opts [TriggerPipelineParameters] :trigger_pipeline_parameters 
  # @return [PipelineCreation]
  describe 'trigger_pipeline test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
