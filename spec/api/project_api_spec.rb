=begin
#CircleCI API

#This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

The version of the OpenAPI document: v2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for CircleciOpenapi::ProjectApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectApi' do
  before do
    # run before each test
    @api_instance = CircleciOpenapi::ProjectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectApi' do
    it 'should create an instance of ProjectApi' do
      expect(@api_instance).to be_instance_of(CircleciOpenapi::ProjectApi)
    end
  end

  # unit tests for create_checkout_key
  # Create a new checkout key
  # Creates a new checkout key. This API request is only usable with a user API token.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @option opts [CheckoutKeyInput] :checkout_key_input 
  # @return [CheckoutKey]
  describe 'create_checkout_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_env_var
  # Create an environment variable
  # Creates a new environment variable.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @option opts [EnvironmentVariablePair1] :environment_variable_pair1 
  # @return [EnvironmentVariablePair1]
  describe 'create_env_var test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_checkout_key
  # Delete a checkout key
  # Deletes the checkout key.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param fingerprint An SSH key fingerprint.
  # @param [Hash] opts the optional parameters
  # @return [MessageResponse]
  describe 'delete_checkout_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_env_var
  # Delete an environment variable
  # Deletes the environment variable named :name.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param name The name of the environment variable.
  # @param [Hash] opts the optional parameters
  # @return [MessageResponse]
  describe 'delete_env_var test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_checkout_key
  # Get a checkout key
  # Returns an individual checkout key.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param fingerprint An SSH key fingerprint.
  # @param [Hash] opts the optional parameters
  # @return [CheckoutKey]
  describe 'get_checkout_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_env_var
  # Get a masked environment variable
  # Returns the masked value of environment variable :name.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param name The name of the environment variable.
  # @param [Hash] opts the optional parameters
  # @return [EnvironmentVariablePair1]
  describe 'get_env_var test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_by_slug
  # Get a project
  # Retrieves a project by project slug.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'get_project_by_slug test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_checkout_keys
  # Get all checkout keys
  # Returns a sequence of checkout keys for &#x60;:project&#x60;.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @return [CheckoutKeyListResponse]
  describe 'list_checkout_keys test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_env_vars
  # List all environment variables
  # Returns four &#39;x&#39; characters, in addition to the last four ASCII characters of the value, consistent with the display of environment variable values on the CircleCI website.
  # @param project_slug Project slug in the form &#x60;vcs-slug/org-name/repo-name&#x60;. The &#x60;/&#x60; characters may be URL-escaped.
  # @param [Hash] opts the optional parameters
  # @return [EnvironmentVariableListResponse]
  describe 'list_env_vars test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
